scalar Date

type Raffle{
    id: ID!
    prize: String!
    server_id: String!
    constituent_id: String!
    channel_id: String!
    message_id: String
    numbersOfWinner: Int!
    status: RaffleStatus!
    finishAt: Date!
    createdAt: Date!
}

type Subscription{
    onRaffleFinished: Raffle!
}

type Mutation{
    createRaffle(data: CreateRaffleInput!): CreateRaffleMutatitonReturnType!
    deleteRaffle(data: DeleteRaffleInput!): RaffleMutationReturnType!
    cancelRaffle(data: CancelRaffleInput!): CancelRaffleMutationReturnType!
    finishEarlyRaffle(data: FinishEarlyRaffleInput): FinishEarylyMutationReturnType!
    setRaffleMessageID(data: SetRaffleMessageIDInput!): RaffleMutationReturnType!
}

type Query{
    getContinuesRaffles(server_id: String!): [Raffle!]!
    searchRaffle(message_id: String!): Raffle
}

enum RaffleStatus{
    CONTINUES
    ALMOST_DONE
    FINISHED
    CANCELED
}

interface MutationReturnType{
    errorCode: Int!
}

input CreateRaffleInput{
    prize: String!
    server_id: String!
    constituent_id: String!
    channel_id: String!
    numbersOfWinner: Int!
    finishAt: Date!
}

input SetRaffleMessageIDInput{
    raffle_id: ID!
    message_id: String!
}

input DeleteRaffleInput{
    raffle_id: ID!
}

input CancelRaffleInput{
    message_id: String!
}

input FinishEarlyRaffleInput{
    message_id: String!
}

type CreateRaffleMutatitonReturnType implements MutationReturnType{
    raffle: Raffle
    errorCode: Int!
}

type RaffleMutationReturnType implements MutationReturnType{
    errorCode: Int!
}

type CancelRaffleMutationReturnType implements MutationReturnType{
    raffle: Raffle
    errorCode: Int!
}

type FinishEarylyMutationReturnType implements MutationReturnType{
    raffle: Raffle
    errorCode: Int!
}